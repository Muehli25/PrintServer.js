doctype html
html(lang='en')
    head
        meta(charset='utf-8')
        meta(name='viewport', content='width=device-width, initial-scale=1, shrink-to-fit=no')
        meta(name='description', content='')
        meta(name='author', content='')

        title PrintServer.js
        link(rel='stylesheet', href='https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css', integrity='sha384-WskhaSGFgHYWDcbwN70/dfYBj47jz9qbsMId/iRN3ewGhXQFZCSftd1LZCfmhktB', crossorigin='anonymous')
        link(rel='stylesheet', href='/stylesheets/footer.css')
        link(rel='stylesheet', href='/stylesheets/style.css')

        script(src='https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js', integrity='sha384-smHYKdLADwkXOn1EmN1qk/HfnUcbVRZyYmZ4qpPea6sjB/pTJ0euyQp0Mk8ck+5T', crossorigin='anonymous')
        script(src='https://code.jquery.com/jquery-3.3.1.slim.min.js', integrity='sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo', crossorigin='anonymous')

    body
        header
            nav.navbar.navbar-expand-md.navbar-dark.fixed-top.bg-dark
                a.navbar-brand(href='#') PrintServer.js
                button.navbar-toggler(type='button', data-toggle='collapse', data-target='#navbarCollapse', aria-controls='navbarCollapse', aria-expanded='false', aria-label='Toggle navigation')
                    span.navbar-toggler-icon
                //#navbarCollapse.collapse.navbar-collapse
                    ul.navbar-nav.mr-auto
                        li.nav-item.active
                            a.nav-link(href='#')
                                | Home
                                span.sr-only (current)
                        li.nav-item
                            a.nav-link(href='#') Link
                        li.nav-item
                            a.nav-link.disabled(href='#') Disabled*/
        // Begin page content
        main.container(role='main')
            form.box(method='post', action='/upload', enctype='multipart/form-data', novalidate='')
                .box__input
                    svg.box__icon(xmlns='http://www.w3.org/2000/svg', width='50', height='43', viewbox='0 0 50 43')
                        path(d='M48.4 26.5c-.9 0-1.7.7-1.7 1.7v11.6h-43.3v-11.6c0-.9-.7-1.7-1.7-1.7s-1.7.7-1.7 1.7v13.2c0 .9.7 1.7 1.7 1.7h46.7c.9 0 1.7-.7 1.7-1.7v-13.2c0-1-.7-1.7-1.7-1.7zm-24.5 6.1c.3.3.8.5 1.2.5.4 0 .9-.2 1.2-.5l10-11.6c.7-.7.7-1.7 0-2.4s-1.7-.7-2.4 0l-7.1 8.3v-25.3c0-.9-.7-1.7-1.7-1.7s-1.7.7-1.7 1.7v25.3l-7.1-8.3c-.7-.7-1.7-.7-2.4 0s-.7 1.7 0 2.4l10 11.6z')
                    input#file.box__file(type='file', name='files[]', data-multiple-caption='{count} files selected', multiple='', style='visibility: hidden')
                    label(for='file')
                        strong Choose a file
                        span.box__dragndrop  or drag it here
                        | .
                    button.box__button(type='submit') Print
                .box__uploading Uploadingâ€¦
                .box__success
                    | Done!
                    a.box__restart(href='/', role='button')  Print more?
                .box__error
                    | Maybe Error! Wait for the Printer!
                    span
                    | .
                    a.box__restart(href='/', role='button')  Try again!

        footer.footer
            .container
                span.text-muted Created by @mhlnstdt 2018

                script.
                    'use strict';
                    ;(function (document, window, index) {
                        // feature detection for drag&drop upload
                        var isAdvancedUpload = function () {
                            var div = document.createElement('div');
                            return (('draggable' in div) || ('ondragstart' in div && 'ondrop' in div)) && 'FormData' in window && 'FileReader' in window;
                        }();
                        // applying the effect for every form
                        var forms = document.querySelectorAll('.box');
                        Array.prototype.forEach.call(forms, function (form) {
                            var input = form.querySelector('input[type="file"]'),
                                label = form.querySelector('label'),
                                errorMsg = form.querySelector('.box__error span'),
                                restart = form.querySelectorAll('.box__restart'),
                                droppedFiles = false,
                                showFiles = function (files) {
                                    label.textContent = files.length > 1 ? (input.getAttribute('data-multiple-caption') || '').replace('{count}', files.length) : files[0].name;
                                },
                                triggerFormSubmit = function () {
                                    var event = document.createEvent('HTMLEvents');
                                    event.initEvent('submit', true, false);
                                    form.dispatchEvent(event);
                                };
                            // letting the server side to know we are going to make an Ajax request
                            var ajaxFlag = document.createElement('input');
                            ajaxFlag.setAttribute('type', 'hidden');
                            ajaxFlag.setAttribute('name', 'ajax');
                            ajaxFlag.setAttribute('value', 1);
                            form.appendChild(ajaxFlag);
                            // automatically submit the form on file select
                            input.addEventListener('change', function (e) {
                                showFiles(e.target.files);
                            });
                            // drag&drop files if the feature is available
                            if (isAdvancedUpload) {
                                form.classList.add('has-advanced-upload'); // letting the CSS part to know drag&drop is supported by the browser
                                ['drag', 'dragstart', 'dragend', 'dragover', 'dragenter', 'dragleave', 'drop'].forEach(function (event) {
                                    form.addEventListener(event, function (e) {
                                        // preventing the unwanted behaviours
                                        e.preventDefault();
                                        e.stopPropagation();
                                    });
                                });
                                ['dragover', 'dragenter'].forEach(function (event) {
                                    form.addEventListener(event, function () {
                                        form.classList.add('is-dragover');
                                    });
                                });
                                ['dragleave', 'dragend', 'drop'].forEach(function (event) {
                                    form.addEventListener(event, function () {
                                        form.classList.remove('is-dragover');
                                    });
                                });
                                form.addEventListener('drop', function (e) {
                                    droppedFiles = e.dataTransfer.files; // the files that were dropped
                                    showFiles(droppedFiles);
                                });
                            }
                            // if the form was submitted
                            form.addEventListener('submit', function (e) {
                                // preventing the duplicate submissions if the current one is in progress
                                if (form.classList.contains('is-uploading')) return false;
                                form.classList.add('is-uploading');
                                form.classList.remove('is-error');
                                if (isAdvancedUpload) // ajax file upload for modern browsers
                                {
                                    e.preventDefault();
                                    // gathering the form data
                                    var ajaxData = new FormData(form);
                                    if (droppedFiles) {
                                        Array.prototype.forEach.call(droppedFiles, function (file) {
                                            ajaxData.append(input.getAttribute('name'), file);
                                        });
                                    }
                                    // ajax request
                                    var ajax = new XMLHttpRequest();
                                    ajax.open(form.getAttribute('method'), form.getAttribute('action'), true);
                                    ajax.onload = function () {
                                        form.classList.remove('is-uploading');
                                        //form.classList.add('is-success');
                                        if (ajax.status >= 200 && ajax.status < 400) {
                                            var data = JSON.parse(ajax.responseText);
                                            form.classList.add(data.success == true ? 'is-success' : 'is-error');
                                            if (!data.success) errorMsg.textContent = data.error;
                                        }
                                        else alert('Error. Please, contact the webmaster!');
                                    };
                                    ajax.onerror = function () {
                                        form.classList.remove('is-uploading');
                                        alert('Error. Please, try again!');
                                    };
                                    ajax.send(ajaxData);
                                }
                            });
                            // restart the form if has a state of error/success
                            Array.prototype.forEach.call(restart, function (entry) {
                                entry.addEventListener('click', function (e) {
                                    e.preventDefault();
                                    form.classList.remove('is-error', 'is-success');
                                    input.click();
                                });
                            });
                            // Firefox focus bug fix for file input
                            input.addEventListener('focus', function () {
                                input.classList.add('has-focus');
                            });
                            input.addEventListener('blur', function () {
                                input.classList.remove('has-focus');
                            });
                        });
                    }(document, window, 0));
